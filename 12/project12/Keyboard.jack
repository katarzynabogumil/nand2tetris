// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack
/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static int address;

    /** Initializes the keyboard. */
    function void init() {
        let address = 24576;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(address);
    }

    /**	Waits until a key is pressed on the keyboard and released,
     *  then echoes the key to the screen, and returns the character 
     *  of the pressed key. */
    function char readChar() {
        var char c;

        // waits until a key is pressed
        while (Keyboard.keyPressed() = 0) {}
        
        let c = Keyboard.keyPressed();
        
        // waits until a key is released
        while (~(Keyboard.keyPressed() = 0)) {}

        do Output.printChar(c);
        return c;
    }

    /**	Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline chsaracter is detected, echoes the text to the screen,
     *  and returns its value. Also handles user backspaces. */
    function String readLine(String message) {
        var String string;
        var char c;

        do Output.printString(message);

        let string = String.new(64);
        let c = Keyboard.readChar();

        while(~(c = String.newLine())){
            if ((c = String.backSpace()) & (string.length() > 0)) {
                do string.eraseLastChar();
            } else {
                do string.appendChar(c);
            }
            let c = Keyboard.readChar();
        }

        return string;
    }   

    /** Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its integer value (until the first non-digit character in the
     *  entered text is detected). Also handles user backspaces. */
    function int readInt(String message) {
        var String string;
        var char c;

        do Output.printString(message);

        let string = String.new(64);
        let c = Keyboard.readChar();

        while ((c = String.backSpace()) | (c = 0) | (c = 45) | ((c > 47) & (c < 58))) {
            if ((c = String.backSpace()) & (string.length() > 0)) {
                do string.eraseLastChar();
            } else {
                do string.appendChar(c);
            }
            let c = Keyboard.readChar();
        }

        return string.intValue();
    }
}
